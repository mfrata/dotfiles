#!/bin/bash

_install() {
  sudo apt install -y $1
}

_pip_install() {
  pip install -U $1
}

preprerequisites-install() {
  # These are prerequisite for the add_apt_repos
  PREPACKAGES="
    curl \
    software-properties-common \
    make \
    git \
    python3-pip
  "
  for PREPACKAGE in ${PREPACKAGES}; do
    _install ${PREPACKAGE};
  done

  pip3 install pip
}

homedirs-install() {
  # dotfiles
  if [ ! -d ~/.dotfiles ]; then
    git clone https://github.com/mfrata/dotfiles.git .dotfiles
    make -C ~/.dotfiles install
  fi

  # company aliases
  if [ ! -f .work_aliases ]; then
    touch .work_aliases
  fi
}


terminal-install() {
  # Neovim
  wget https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
  sudo tar -C /usr/local --strip-components 1 -xzf nvim-linux64.tar.gz
  rm nvim-linux64* -rf

  # Zsh
  _install zsh
  chsh -s /usr/bin/zsh mfrata

  # om-my-zsh
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

  # Pure theme for zsh
  mkdir -p "$HOME/.zsh"
  git clone https://github.com/sindresorhus/pure.git "$HOME/.zsh/pure"

  # Tmux  Terminal multiplexer
  _install tmux

  # FZF  Fuzzy find (can't live without it)
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install

  # Utils
  _install htop # Monitor process on terminal
  _install tree # View dir struct
  _install jq # Query jsons
  _pip_install trash-cli # Safe rm

  # A good terminal (I liked that you can remove the top bar)
  # TODO get newer version of allacritty
  ALACRITTY_VERSION=v0.4.3
  wget https://github.com/alacritty/alacritty/releases/download/$ALACRITTY_VERSION/Alacritty-$ALACRITTY_VERSION-ubuntu_18_04_amd64.deb
  sudo dpkg -i Alacritty-$ALACRITTY_VERSION-ubuntu_18_04_amd64.deb | sudo apt install -f
  rm Alacritty*

  # Better grep
  RG_VERSION=12.1.1
  curl -LO https://github.com/BurntSushi/ripgrep/releases/download/${RG_VERSION}/ripgrep_${RG_VERSION}_amd64.deb
  sudo dpkg -i ripgrep_${RG_VERSION}_amd64.deb
  rm ripgrep_${RG_VERSION}_amd64.deb
}

devops-install() {
  _install build-essential

  # Docker
  curl -fsSL https://get.docker.com -o get-docker.sh
  sudo sh get-docker.sh
  sudo usermod -aG docker mfrata
  rm get-docker.sh

  # Docker compose
  # TODO fix docker-compose

  # Kubectl
  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
  echo "$(<kubectl.sha256) kubectl" || sha256sum --check && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  rm kubectl.sha256

  # Google cloud
  GCP_VERSION=329.0.0
  curl -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-$GCP_VERSION-linux-x86_64.tar.gz
  tar -C ~/.local -xzf google-cloud-sdk-$GCP_VERSION-linux-x86_64.tar.gz
  ~/.local/google-cloud-sdk/install.sh
  rm google*
}

javascript-install () {
  NODE_VERSION=v15.10.0
  curl -LO https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-linux-x64.tar.xz
  sudo tar -C /usr/local --strip-components 1 -xzf node-$NODE_VERSION-linux-x64.tar.gz
}

python-install() {
  # TODO devtools (mypy,autoflake,black and etc)
  echo
}

scala-install() {
  # TODO Sbt
  # TODO Scala lang
  echo
}

rust-install() {
  # TODO cargo
  echo
}

media-install() {
  # TODO Spotify
  # TODO Audacity
  # TODO Rawtherapee
  # TODO Sound pluging
  # TODO mpv
  # TODO ffmpeg
  # TODO imagemagick

  # Rapid Photo Downloader
  wget https://launchpad.net/rapid/pyqt/0.9.26/+download/install.py
  python3 install.py
  rm install.py
}

extra-install() {
  # Dropbox
  wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
}

all-install () {
  cd && sudo apt update && sudo apt upgrade

  preprerequisites-install
  homedirs-install
  terminal-install
  devops-install
}

main() {
  # TODO make possible to install only part of the packages
  echo
}
