#!/bin/bash

install-apt() {
  sudo apt install --no-install-recommends -f --yes $1
}

install-pip() {
  pip install -U $1
}

install-dpkg() {
  sudo dpkg -i $1 | install-apt
  rm $1
}

install-tar() {
  [ $2 ] && location=$2 || location=/usr/local
  sudo tar -C $location --strip-components 1 -xf $1
  rm $1
}

install-appimage() {
  chmod +x $1
  ./$1 --appimage-extract usr
  sudo cp -r squashfs-root/usr/* /usr/local/
  rm $1 squashfs-root -r
}

install-sh() {
  $url=$1
  sudo sh -c "$(curl -fsSL ${url})"
}

install-bin() {
  $file=$1
  sudo install -o root -g root -m 0755 $file /usr/local/bin/$file
  rm $file
}

repo(){
  sudo add-apt-repository --yes $1
}

preprerequisites-install() {
  # These are prerequisite for the add_apt_repos
  PREPACKAGES="
    curl \
    software-properties-common \
    make \
    git \
    python3-pip
  "
  for PREPACKAGE in ${PREPACKAGES}; do
    install-apt ${PREPACKAGE};
  done

  pip3 install pip
}

homedirs-install() {
  # dotfiles
  if [ ! -d ~/.dotfiles ]; then
    git clone https://github.com/mfrata/dotfiles.git .dotfiles
    make -C ~/.dotfiles install
  fi

  # company aliases
  if [ ! -f .work_aliases ]; then
    touch .work_aliases
  fi
}


terminal-install() {
  # Neovim
  wget https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
  install-tar nvim-linux64.tar.gz

  # Zsh
  install-apt zsh
  chsh -s /usr/bin/zsh mfrata

  # om-my-zsh
  install-sh https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh

  # Pure theme for zsh
  mkdir -p "$HOME/.zsh"
  git clone https://github.com/sindresorhus/pure.git "$HOME/.zsh/pure"

  # Tmux  Terminal multiplexer
  install-apt tmux

  # FZF  Fuzzy find (can't live without it)
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install

  # Utils
  install-apt xsel # Clipboard utilities
  install-apt htop # Monitor process on terminal
  install-apt tree # View dir struct
  install-apt jq # Query jsons
  install-pip trash-cli # Safe rm

  # A good terminal (I liked that you can remove the top bar)
  # TODO get newer version of allacritty
  ALACRITTY_VERSION=v0.4.3
  wget https://github.com/alacritty/alacritty/releases/download/$ALACRITTY_VERSION/Alacritty-$ALACRITTY_VERSION-ubuntu_18_04_amd64.deb
  install-dpkg Alacritty-$ALACRITTY_VERSION-ubuntu_18_04_amd64.deb

  # Better grep
  RG_VERSION=12.1.1
  wget https://github.com/BurntSushi/ripgrep/releases/download/${RG_VERSION}/ripgrep_${RG_VERSION}_amd64.deb
  install-dpkg ripgrep_${RG_VERSION}_amd64.deb
}

devops-install() {
  install-apt build-essential

  # Docker
  install-sh https://get.docker.com
  sudo usermod -aG docker mfrata

  # Docker compose
  # TODO fix docker-compose

  # Kubectl
  K8S_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
  wget "https://dl.k8s.io/release/$K8S_VERSION/bin/linux/amd64/kubectl"
  install-bin kubectl /usr/local/bin/kubectl

  # Google cloud
  GCP_VERSION=329.0.0
  curl -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-$GCP_VERSION-linux-x86_64.tar.gz
  tar -C ~/.local -xzf google-cloud-sdk-$GCP_VERSION-linux-x86_64.tar.gz
  ~/.local/google-cloud-sdk/install.sh
  rm google*
}

javascript-install () {
  NODE_VERSION=v15.10.0
  wget https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-linux-x64.tar.xz
  _install_tar node-$NODE_VERSION-linux-x64.tar.gz
}

python-install() {
  # Python 3.9
  repo ppa:deadsnakes/ppa && install-apt python3.9
  sudo mv /usr/bin/python /usr/bin/python2
  sudo ln -s /usr/bin/python3.9 /usr/bin/python

  install-pip pytest
  install-pip ipython
}

scala-install() {
  # TODO Sbt
  # TODO Scala lang
  echo
}

rust-install() {
  # TODO cargo
  echo
}

tools-install() {
  # Keybase - Share secrets safely
  curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb
  install-dpkg keybase_amd64.deb
  run_keybase

  # KeypassXC - otp
  KEYPASSXC_VERSION=2.6.4
  wget https://github.com/keepassxreboot/keepassxc/releases/download/$KEYPASSXC_VERSION/KeePassXC-$KEYPASSXC_VERSION-x86_64.AppImage
  install-appimage KeePassXC-$KEYPASSXC_VERSION-x86_64.AppImage

  TELEGRAM_VERSION=2.6.1
  wget https://updates.tdesktop.com/tlinux/tsetup.$TELEGRAM_VERSION.tar.xz
  install-tar tsetup.$TELEGRAM_VERSION.tar.xz /usr/local/bin
  # Libreoffice calc
  install-apt libreoffice-calc
}

others-install() {
  # Zoom -> Why!!?
  wget https://zoom.us/client/latest/zoom_amd64.deb
  install-dpkg zoom_amd64.deb

}


media-install() {
  # TODO Spotify
  repo ppa:ubuntuhandbook1/audacity && install-apt audacity
  # TODO Rawtherapee
  # TODO Sound pluging
  # TODO mpv
  repo ppa:mc3man/mpv-tests $$ install-apt mpv
  # TODO ffmpeg
  # TODO imagemagick

  # Rapid Photo Downloader
  wget https://launchpad.net/rapid/pyqt/0.9.26/+download/install.py
  python3 install.py
  rm install.py
}

extra-install() {
  # Dropbox
  wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
}

all-install () {
  cd && sudo apt update && sudo apt upgrade

  preprerequisites-install
  homedirs-install
  terminal-install
  devops-install
}

main() {
  # TODO make possible to install only part of the packages
  echo
}
